name: Commit stage
on: push
env:
  REGISTRY: ghcr.io 
  IMAGE_NAME: b1ackshadow/catalog-service-config-server
  VERSION: latest
jobs:
  build: 
    name: Build and Test
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with: 
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: high
          #acs-report-enable: true
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with: 
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Build, unit tests and integration tests
        run: |
          chmod +x mvnw
          ./mvnw install
  package: 
    name: Package and publish
    if: ${{ github.ref == 'refs/heads/main'}}
    needs: [ build ]
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write # it will publish to packages
      security-events: write

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven
      - name: Build container image
        run: |
            chmod +x mvnw
            ./mvnw -e spring-boot:build-image \
            -Dspring-boot.build-image.imageName=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} \
      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with: 
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high
          #acs-report-enable: true
      - name: Upload vulnerability report for image
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with: 
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Login into container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY}}
          username: ${{ github.actor}}
          password: ${{ secrets.GITHUB_TOKEN}}
      - name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

